{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "es",
      "name": "Español (Spanish)"
    },
    {
      "code": "fr",
      "name": "Français (French)"
    },
    {
      "code": "ne",
      "name": "नेपाली (Nepali)"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "forms_only_mode": false,
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "default_responses": {
    "start_date": ""
  },
  "district_admins_access_unallocated_messages": false,
  "public_access": false,
  "default_country_code": 1,
  "gateway_number": "+13125551212",
  "kujua-reporting": [
    {
      "code": "VPD",
      "reporting_freq": "weekly"
    }
  ],
  "dhisDataSets": [
    {
      "guid": "VMuFODsyWaO",
      "label": "MoH Monthly Integration"
    }
  ],
  "schedule_morning_hours": 0,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 23,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_profile": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_last_visited_date": [],
    "can_view_message_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": []
  },
  "changes_controller": {
    "reiterate_changes": true,
    "changes_limit": 100,
    "debounce_interval": 200
  },
  "uhc": {
    "contacts_default_sort": "",
    "visit_count": {
      "month_start_date": 1,
      "visit_count_goal": 0
    }
  },
  "death_reporting": {
    "mark_deceased_forms": [
      "death_report"
    ],
    "date_field": "fields.death_details.date_of_death",
    "undo_deceased_forms": [
      "undo_death_report"
    ]
  },
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ],
  "setup_complete": true,
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var a=t();for(var n in a)('object'==typeof exports?exports:e)[n]=a[n]}}(ContactSummary,(function(){return function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,'a',t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p='',a(a.s=0)}([function(e,t,a){var n=a(1),o=a(2);e.exports=o(n,contact,reports)},function(e,t){const a=contact,n=lineage,o=reports,i=(e,t)=>[...(t||'').split('.')].reduce((e,t)=>{if(void 0!==e)return e[t]},e),l=()=>'traveler'===i(a,'role'),r=function(e){return o&&o.some(t=>t.form===e)},c={isPassenger:l(),hasDeclarationForm:r('declaration'),hasLocatorForm:r('locator'),hasQuarantineForm:r('quarantine')},p=[{appliesToType:'person',label:'patient_id',value:a.patient_id,width:4},{appliesToType:'person',label:'contact.age',value:a.date_of_birth,width:4,filter:'age'},{appliesToType:'person',label:'contact.sex',value:'contact.sex.'+a.sex,translate:!0,width:4},{appliesToType:'person',label:'person.field.phone',value:a.phone,width:4},{appliesToType:'person',label:'person.field.alternate_phone',value:a.phone_alternate,width:4},{appliesToType:'person',appliesIf:l,label:'contact.nationality',value:'country.'+i(a,'traveler.nationality'),translate:!0,width:4},{appliesToType:'person',appliesIf:l,label:'contact.passport',value:i(a,'traveler.passport'),width:4},{appliesToType:'person',label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'!person',label:'contact',value:a.contact&&a.contact.name,width:4},{appliesToType:'!person',label:'contact.phone',value:a.contact&&a.contact.phone,width:4},{appliesToType:'!person',label:'External ID',value:a.external_id,width:4},{appliesToType:'!person',appliesIf:function(){return a.parent&&n[0]},label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'person',label:'contact.notes',value:a.notes,width:12},{appliesToType:'!person',label:'contact.notes',value:a.notes,width:12}],f=[{label:'contact.profile.referral',appliesToType:'person',appliesIf:function(){return l()&&!!u(o,'referral')},fields:function(){const e=[],t=u(o,'referral'),a=i(t,'fields.temp_infra_unit'),n=i(t,'fields.temp_clinical_unit'),l='celsius'===a?'°C':'fahrenheit'===a?'°F':'',r='celsius'===n?'°C':'fahrenheit'===n?'°F':'';return t&&e.push({label:'contact.profile.referral.temp_ir',value:i(t,'fields.temp_infra')+l,width:6},{label:'contact.profile.referral.temp_clinical',value:i(t,'fields.temp_clinical')+r,width:6},{label:'contact.profile.referral.referred_to',value:'contact.profile.referral.place.'+i(t,'fields.referred_to'),translate:!0,width:6},{label:'',icon:'icon-risk',width:6}),e}},{label:'contact.profile.quarantine.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'quarantine');return t?e.push({label:'contact.profile.quarantine.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.quarantine.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.quarantine.arrival_date',value:i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4},{label:'contact.profile.quarantine.accomodation.stay',value:'contact.profile.quarantine.accomodation.stay.'+i(t,'fields.accomodation.staying_at'),translate:!0,width:4},{label:'contact.profile.quarantine.accomodation.province',value:i(t,'fields.accomodation.province'),width:4},{label:'contact.profile.quarantine.accomodation.district',value:i(t,'fields.accomodation.district'),width:4},{label:'contact.profile.quarantine.accomodation.municipality',value:i(t,'fields.accomodation.municipality'),width:4},{label:'contact.profile.quarantine.accomodation.ward',value:i(t,'fields.accomodation.ward'),width:4},{label:'contact.profile.quarantine.accomodation.house',value:i(t,'fields.accomodation.house'),width:4},{label:'contact.profile.quarantine.accomodation.landline',value:i(t,'fields.accomodation.landline'),width:4},{label:'contact.profile.quarantine.accomodation.mobile',value:i(t,'fields.accomodation.mobile'),width:4}):e.push({label:'contact.profile.quarantine.form.none'}),e}},{label:'contact.profile.declaration.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'declaration');if(t){const a=s(i(t,'fields.contact_info')),n=s(i(t,'fields.health'));a&&a.length>0?(e.push({label:'risk.contact.found',width:12,icon:'icon-risk'}),a.forEach((function(t){e.push({value:'risk.contact.'+t,translate:!0,width:12})}))):e.push({label:'risk.contact.none'}),n&&n.length>0?(e.push({label:'risk.health.found',width:12,icon:'icon-risk'}),n.forEach((function(t){e.push({value:'risk.health.'+t,translate:!0,width:12})}))):e.push({label:'risk.health.none'})}else e.push({label:'contact.profile.declaration.form.none'});return e}},{label:'contact.profile.locator.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'locator');return t?e.push({label:'contact.profile.locator.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.locator.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.locator.arrival_date',value:i(t,'fields.flight_info.arrival_date_updated')||i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4}):e.push({label:'contact.profile.locator.form.none'}),e}}];function s(e){if(!e)return!1;const t=[];return Object.keys(e).forEach((function(a){'true'===e[a]&&a.indexOf('_risk')<0&&t.push(a)})),t}function u(e,t){let a;return e&&e.forEach((function(e){(function(e){return!!(e.form&&e.fields&&e.reported_date)})(e)&&t.includes(e.form)&&(!a||e.reported_date>a.reported_date)&&(a=e)})),a}e.exports={context:c,cards:f,fields:p}},function(e,t){function a(e){return Array.isArray(e)?e:[e]}function n(e,t,a){if(e.appliesIf(a)){var n='function'==typeof e.fields?e.fields(a):e.fields.filter((function(e){switch(typeof e.appliesIf){case'undefined':return!0;case'function':return e.appliesIf(a);default:return e.appliesIf}})).map((function(e){var t={};return o(e,t,'label'),o(e,t,'value'),o(e,t,'translate'),o(e,t,'filter'),o(e,t,'width'),o(e,t,'icon'),e.context&&(t.context={},o(e.context,t.context,'count'),o(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,a),{label:e.label,fields:n}}function o(e,t,n){switch(typeof e[n]){case'undefined':return;case'function':t[n]=e[n](a);break;default:t[n]=e[n]}}}e.exports=function(e,t,o){var i=e.fields||[],l=e.context||{},r=e.cards||[],c=t&&(t.contact_type||t.type),p={cards:[],fields:i.filter((function(e){var t=a(e.appliesToType),n=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((t.includes(c)||n.length>0&&!n.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return r.forEach((function(e){var t,i,r,f,s=a(e.appliesToType);if(s.includes('report')&&s.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(s.includes('report'))for(t=0;t<o.length;++t)i=o[t],!(f=i)||f.errors&&f.errors.length||(r=n(e,l,i))&&p.cards.push(r);else{if(!s.includes(c))return;(r=n(e,l))&&p.cards.push(r)}})),p.context=l,p}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,'a',t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p='',o(o.s=1)}([function(e,t){e.exports=function(e){var t={};!function e(t,o){var n=Object.keys(t);for(var r in n){var a=n[r];switch(typeof t[a]){case'object':e(t[a],o);break;case'function':t[a]=t[a].bind(o)}}}(e,t),t.definition=function e(t){var o=Object.assign({},t),n=Object.keys(o);for(var r in n){var a=n[r];if(Array.isArray(o[a])){o[a]=o[a].slice(0);for(var c=0;c<o[a].length;++c)'object'==typeof o[a][c]&&(o[a][c]=e(o[a][c]))}else'object'==typeof o[a]&&(o[a]=e(o[a]))}return o}(e)}},function(e,t,o){var n=o(2),r=o(3),a=o(4);o(5)(r,c,Utils,Target,emit),a(n,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(e,t){e.exports=[]},function(e,t){e.exports=[]},function(e,t,o){var n=o(0);function r(e,t,o,n,r,a){var c;if(e.appliesToType){var i='contact'===r.contact.type?r.contact.contact_type:r.contact.type;if(!('contacts'===e.appliesTo?-1!==e.appliesToType.indexOf(i):a&&-1!==e.appliesToType.indexOf(a.form)))return}if('scheduled_tasks'===e.appliesTo||!e.appliesIf||e.appliesIf(r,a))if('scheduled_tasks'===e.appliesTo){if(a&&e.appliesIf){if(!a.scheduled_tasks)return;for(c=0;c<a.scheduled_tasks.length;c++)e.appliesIf(r,a,c)&&d(c)}}else d();function s(e,t,o){var n;return(n='function'==typeof e.contactLabel?e.contactLabel(t,o):e.contactLabel)?{name:n}:t.contact}function d(c){var i,d,f,l,u=null;for(i=0;i<e.events.length;i++){if((d=e.events[i]).dueDate)u=d.dueDate(d,r,a,c);else if(a)u=void 0!==c?new Date(t.addDate(new Date(a.scheduled_tasks[c].due),d.days)):new Date(t.addDate(new Date(a.reported_date),d.days));else if(d.dueDate)u=d.dueDate(d,r);else{var y=r.contact&&r.contact.reported_date?new Date(r.contact.reported_date):new Date;u=new Date(t.addDate(y,d.days))}t.isTimely(u,d)&&(l={_id:(a?a._id:r.contact&&r.contact._id)+'~'+(d.id||i)+'~'+e.name,deleted:!(!(r.contact&&r.contact.deleted||a)||!a.deleted),doc:r,contact:s(e,r,a),icon:e.icon,date:u,readyStart:d.start||0,readyEnd:d.end||0,title:e.title,resolved:e.resolvedIf(r,a,d,u,c),actions:e.actions.map(p)},void 0!==c&&(l._id+='-'+c),'function'==typeof(f=e.priority)&&(f=f(r,a)),f&&(l.priority=f.level,l.priorityLabel=f.label),n('task',new o(l)))}}function p(e){var t={source:'task',source_id:!!a?a._id:r.contact&&r.contact._id,contact:r.contact};return e.modifyContent&&e.modifyContent(t,r,a),{type:'report',form:e.form,label:e.label||'Follow up',content:t}}}e.exports=function(e,t,o,a,c){if(e)for(var i,s=0;s<e.length;++s)switch(i=e[s],n(i),i.appliesTo){case'reports':case'scheduled_tasks':for(var d=0;d<t.reports.length;++d)r(i,o,a,c,t,t.reports[d]);break;case'contacts':t.contact&&r(i,o,a,c,t);break;default:throw new Error('Unrecognised task.appliesTo: '+i.appliesTo)}}},function(e,t,o){var n=o(0);function r(e,t,o,n,r,a){var c=!!a;if(r.contact){var i=r.contact.contact_type||r.contact.type,s=c?a.form:i;if(!(e.appliesToType&&e.appliesToType.indexOf(s)<0)&&(!e.appliesIf||e.appliesIf(r,a)))for(var d=c?a:r.contact,p=function(e,t,o){var n;return n='function'==typeof e.idType?e.idType(t,o):'report'===e.idType?o&&o._id:t.contact&&t.contact._id,Array.isArray(n)||(n=[n]),n}(e,r,a),f=!e.passesIf||!!e.passesIf(r,a),l=function(e,t,o,n){if('function'==typeof e.date)return e.date(o,n);if(void 0===e.date||'now'===e.date)return t.now().getTime();if('reported'===e.date)return n?n.reported_date:o.contact.reported_date;throw new Error('Unrecognised value for target.date: '+e.date)}(e,o,r,a),u=e.groupBy&&e.groupBy(r,a),y=0;y<p.length;++y){var v=new t({_id:p[y]+'~'+e.id,contact:r.contact,deleted:!!d.deleted,type:e.id,pass:f,groupBy:u,date:l});e.emitCustom?e.emitCustom(b,v,r,a):b(v)}}function b(e){n('target',e)}}e.exports=function(e,t,o,a,c){for(var i=0;i<e.length;++i){var s=e[i];switch(n(s),s.appliesTo){case'contacts':r(s,a,o,c,t);break;case'reports':for(var d=0;d<t.reports.length;++d){r(s,a,o,c,t,t.reports[d])}break;default:throw new Error('Unrecognised target.appliesTo: '+s.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": []
    }
  },
  "transitions": {
    "mark_for_outbound": true,
    "accept_patient_reports": false,
    "conditional_alerts": false,
    "default_responses": false,
    "update_sent_by": false,
    "registration": false,
    "update_clinics": false,
    "update_notifications": false,
    "update_scheduled_reports": false,
    "update_sent_forms": false,
    "generate_patient_id_on_people": true,
    "death_reporting": true
  },
  "outbound": {
    "textit-patient": {
      "relevant_to": "doc.type === 'person' && doc.phone && doc.parent.parent.parent",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'5e52fe1a-1236-49bb-8de5-df5724e85e20'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.phone ]",
          "optional": false
        },
        "extra.patient._id": "doc._id",
        "extra.patient._rev": "doc._rev",
        "extra.patient.name": "doc.name",
        "extra.patient.short_name": "doc.short_name",
        "extra.patient.date_of_birth": "doc.date_of_birth",
        "extra.patient.medic_id": "doc.patient_id",
        "extra.patient.phone": "doc.phone",
        "extra.chw._id": "doc.parent.parent.contact._id",
        "extra.chw.name": "doc.parent.parent.contact.name"
      }
    }
  }
}
