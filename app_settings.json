{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "es",
      "name": "Español (Spanish)"
    },
    {
      "code": "fr",
      "name": "Français (French)"
    },
    {
      "code": "ne",
      "name": "नेपाली (Nepali)"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "date_format": "D MMM, YYYY",
  "reported_date_format": "DD-MMM-YYYY HH:mm:ss",
  "forms_only_mode": false,
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "default_responses": {
    "start_date": ""
  },
  "district_admins_access_unallocated_messages": false,
  "public_access": false,
  "default_country_code": 1,
  "gateway_number": "+15146906436",
  "kujua-reporting": [
    {
      "code": "VPD",
      "reporting_freq": "weekly"
    }
  ],
  "dhisDataSets": [
    {
      "guid": "VMuFODsyWaO",
      "label": "MoH Monthly Integration"
    }
  ],
  "schedule_morning_hours": 0,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 23,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_profile": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_log_out_on_android": [],
    "can_update_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_last_visited_date": [],
    "can_view_message_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": []
  },
  "changes_controller": {
    "reiterate_changes": true,
    "changes_limit": 100,
    "debounce_interval": 200
  },
  "uhc": {
    "contacts_default_sort": "",
    "visit_count": {
      "month_start_date": 1,
      "visit_count_goal": 0
    }
  },
  "death_reporting": {
    "mark_deceased_forms": [
      "death_report"
    ],
    "date_field": "fields.death_details.date_of_death",
    "undo_deceased_forms": [
      "undo_death_report"
    ]
  },
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ],
  "setup_complete": true,
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var a=t();for(var n in a)('object'==typeof exports?exports:e)[n]=a[n]}}(ContactSummary,(function(){return function(e){var t={};function a(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,a),o.l=!0,o.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)a.d(n,o,function(t){return e[t]}.bind(null,o));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,'a',t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p='',a(a.s=0)}([function(e,t,a){var n=a(1),o=a(2);e.exports=o(n,contact,reports)},function(e,t){const a=contact,n=lineage,o=reports,i=(e,t)=>[...(t||'').split('.')].reduce((e,t)=>{if(void 0!==e)return e[t]},e),l=()=>'traveler'===i(a,'role'),r=function(e){return o&&o.some(t=>t.form===e)},c={isPassenger:l(),hasDeclarationForm:r('declaration'),hasLocatorForm:r('locator'),hasQuarantineForm:r('quarantine')},p=[{appliesToType:'person',label:'patient_id',value:a.patient_id,width:4},{appliesToType:'person',label:'contact.age',value:a.date_of_birth,width:4,filter:'age'},{appliesToType:'person',label:'contact.sex',value:'contact.sex.'+a.sex,translate:!0,width:4},{appliesToType:'person',label:'person.field.phone',value:a.phone,width:4},{appliesToType:'person',label:'person.field.alternate_phone',value:a.phone_alternate,width:4},{appliesToType:'person',appliesIf:l,label:'contact.nationality',value:'country.'+i(a,'traveler.nationality'),translate:!0,width:4},{appliesToType:'person',appliesIf:l,label:'contact.passport',value:i(a,'traveler.passport'),width:4},{appliesToType:'person',label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'!person',label:'contact',value:a.contact&&a.contact.name,width:4},{appliesToType:'!person',label:'contact.phone',value:a.contact&&a.contact.phone,width:4},{appliesToType:'!person',label:'External ID',value:a.external_id,width:4},{appliesToType:'!person',appliesIf:function(){return a.parent&&n[0]},label:'contact.parent',value:n,filter:'lineage'},{appliesToType:'person',label:'contact.notes',value:a.notes,width:12},{appliesToType:'!person',label:'contact.notes',value:a.notes,width:12}],f=[{label:'contact.profile.referral',appliesToType:'person',appliesIf:function(){return l()&&!!u(o,'referral')},fields:function(){const e=[],t=u(o,'referral'),a=i(t,'fields.temp_infra_unit'),n=i(t,'fields.temp_clinical_unit'),l='celsius'===a?'°C':'fahrenheit'===a?'°F':'',r='celsius'===n?'°C':'fahrenheit'===n?'°F':'';return t&&e.push({label:'contact.profile.referral.temp_ir',value:i(t,'fields.temp_infra')+l,width:6},{label:'contact.profile.referral.temp_clinical',value:i(t,'fields.temp_clinical')+r,width:6},{label:'contact.profile.referral.referred_to',value:'contact.profile.referral.place.'+i(t,'fields.referred_to'),translate:!0,width:6},{label:'',icon:'icon-risk',width:6}),e}},{label:'contact.profile.quarantine.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'quarantine');return t?e.push({label:'contact.profile.quarantine.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.quarantine.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.quarantine.arrival_date',value:i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4},{label:'contact.profile.quarantine.accomodation.stay',value:'contact.profile.quarantine.accomodation.stay.'+i(t,'fields.accomodation.staying_at'),translate:!0,width:4},{label:'contact.profile.quarantine.accomodation.province',value:i(t,'fields.accomodation.province'),width:4},{label:'contact.profile.quarantine.accomodation.district',value:i(t,'fields.accomodation.district'),width:4},{label:'contact.profile.quarantine.accomodation.municipality',value:i(t,'fields.accomodation.municipality'),width:4},{label:'contact.profile.quarantine.accomodation.ward',value:i(t,'fields.accomodation.ward'),width:4},{label:'contact.profile.quarantine.accomodation.house',value:i(t,'fields.accomodation.house'),width:4},{label:'contact.profile.quarantine.accomodation.landline',value:i(t,'fields.accomodation.landline'),width:4},{label:'contact.profile.quarantine.accomodation.mobile',value:i(t,'fields.accomodation.mobile'),width:4}):e.push({label:'contact.profile.quarantine.form.none'}),e}},{label:'contact.profile.declaration.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'declaration');if(t){const a=s(i(t,'fields.contact_info')),n=s(i(t,'fields.health'));a&&a.length>0?(e.push({label:'risk.contact.found',width:12,icon:'icon-risk'}),a.forEach((function(t){e.push({value:'risk.contact.'+t,translate:!0,width:12})}))):e.push({label:'risk.contact.none'}),n&&n.length>0?(e.push({label:'risk.health.found',width:12,icon:'icon-risk'}),n.forEach((function(t){e.push({value:'risk.health.'+t,translate:!0,width:12})}))):e.push({label:'risk.health.none'})}else e.push({label:'contact.profile.declaration.form.none'});return e}},{label:'contact.profile.locator.form',appliesToType:'person',appliesIf:l,fields:function(){const e=[],t=u(o,'locator');return t?e.push({label:'contact.profile.locator.airline',value:i(t,'fields.flight_info.airline'),width:4},{label:'contact.profile.locator.flight',value:i(t,'fields.flight_info.flight'),width:4},{label:'contact.profile.locator.arrival_date',value:i(t,'fields.flight_info.arrival_date_updated')||i(t,'fields.flight_info.arrival_date'),filter:'simpleDate',width:4}):e.push({label:'contact.profile.locator.form.none'}),e}}];function s(e){if(!e)return!1;const t=[];return Object.keys(e).forEach((function(a){'true'===e[a]&&a.indexOf('_risk')<0&&t.push(a)})),t}function u(e,t){let a;return e&&e.forEach((function(e){(function(e){return!!(e.form&&e.fields&&e.reported_date)})(e)&&t.includes(e.form)&&(!a||e.reported_date>a.reported_date)&&(a=e)})),a}e.exports={context:c,cards:f,fields:p}},function(e,t){function a(e){return Array.isArray(e)?e:[e]}function n(e,t,a){if(e.appliesIf(a)){var n='function'==typeof e.fields?e.fields(a):e.fields.filter((function(e){switch(typeof e.appliesIf){case'undefined':return!0;case'function':return e.appliesIf(a);default:return e.appliesIf}})).map((function(e){var t={};return o(e,t,'label'),o(e,t,'value'),o(e,t,'translate'),o(e,t,'filter'),o(e,t,'width'),o(e,t,'icon'),e.context&&(t.context={},o(e.context,t.context,'count'),o(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,a),{label:e.label,fields:n}}function o(e,t,n){switch(typeof e[n]){case'undefined':return;case'function':t[n]=e[n](a);break;default:t[n]=e[n]}}}e.exports=function(e,t,o){var i=e.fields||[],l=e.context||{},r=e.cards||[],c=t&&(t.contact_type||t.type),p={cards:[],fields:i.filter((function(e){var t=a(e.appliesToType),n=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((t.includes(c)||n.length>0&&!n.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return r.forEach((function(e){var t,i,r,f,s=a(e.appliesToType);if(s.includes('report')&&s.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(s.includes('report'))for(t=0;t<o.length;++t)i=o[t],!(f=i)||f.errors&&f.errors.length||(r=n(e,l,i))&&p.cards.push(r);else{if(!s.includes(c))return;(r=n(e,l))&&p.cards.push(r)}})),p.context=l,p}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function r(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var n in t)r.d(o,n,function(e){return t[e]}.bind(null,n));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,'a',e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p='',r(r.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,r){var o=Object.keys(e);for(var n in o){var a=o[n];switch(typeof e[a]){case'object':t(e[a],r);break;case'function':e[a]=e[a].bind(r)}}}(t,e),e.definition=function t(e){var r=Object.assign({},e),o=Object.keys(r);for(var n in o){var a=o[n];if(Array.isArray(r[a])){r[a]=r[a].slice(0);for(var i=0;i<r[a].length;++i)'object'==typeof r[a][i]&&(r[a][i]=t(r[a][i]))}else'object'==typeof r[a]&&(r[a]=t(r[a]))}return r}(t)}},function(t,e,r){var o=r(2),n=r(3),a=r(4);r(5)(n,c,Utils,Target,emit),a(o,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e){t.exports=[{name:'covid-rdt-followup',icon:'icon-healthcare',title:'task.covid_followup.title',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return this.mostRecentRdt=Utils.getMostRecentReport(t.reports,'covid_rdt'),this.mostRecentRdt&&'positive'===Utils.getField(this.mostRecentRdt,'test_result')},resolvedIf:function(t,e,r){const o=Utils.addDate(r.dueDate(t,e),-r.start),n=Utils.addDate(r.dueDate(t,e),r.end+1),a=t.reports.filter(t=>t.reported_date>=this.mostRecentRdt.reported_date);return Utils.isFormSubmittedInWindow(a,'covid_rdt_followup',o,n)},events:[{start:1,end:3,dueDate:function(){return Utils.addDate(new Date(this.mostRecentRdt.reported_date),1)}}],actions:[{type:'contacts',form:'covid_rdt_followup',label:'task.covid_followup.title'}]}]},function(t,e){const r=(t,e)=>[...(e||'').split('.')].reduce((t,e)=>{if(void 0!==t)return t[e]},t),o=t=>'traveler'===r(t.contact,'role'),n=t=>{const e=new Date;return t.getDate()===e.getDate()&&t.getMonth()===e.getMonth()&&t.getFullYear()===e.getFullYear()},a=t=>'referral'===t.form;t.exports=[{id:'travellers-registered-this-month',type:'count',icon:'icon-person',goal:0,translation_key:'targets.travellers.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:o,date:'reported'},{id:'travellers-registered-today',type:'count',icon:'icon-person',goal:0,translation_key:'targets.travellers.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return o(t)&&n(new Date(t.contact.reported_date))},date:'reported'},{id:'reports-with-risk-this-month',type:'count',icon:'icon-risk',goal:0,translation_key:'targets.risk.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'reports',appliesToType:['declaration'],idType:'contact',appliesIf:function(t,e){return'true'===r(e,'fields.r_high_risk')},date:'reported'},{id:'travellers-with-declaration-this-month',type:'percent',icon:'icon-form-general',goal:100,translation_key:'targets.declaration.percent',subtitle_translation_key:'targets.this_month.subtitle',percentage_count_translation_key:'targets.traveller.percent',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:o,passesIf:function(t){return t.reports.some(t=>(t=>'declaration'===t.form)(t))},date:'reported'},{id:'travellers-with-quarantine-today',type:'count',icon:'icon-calendar',goal:0,translation_key:'targets.quarantine.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'reports',appliesToType:['quarantine'],idType:'contact',appliesIf:function(t,e){return n(new Date(e.reported_date))},date:'reported'},{id:'travellers-with-quarantine-this-month',type:'percent',icon:'icon-calendar',goal:100,translation_key:'targets.quarantine.percent',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:o,passesIf:function(t){return t.reports.some(t=>(t=>'quarantine'===t.form)(t))},date:'reported'},{id:'travellers-with-locator-this-month',type:'percent',icon:'icon-service-rating',goal:100,translation_key:'targets.locator.percent',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:o,passesIf:function(t){return t.reports.some(t=>(t=>'locator'===t.form)(t))},date:'reported'},{id:'travellers-with-referral-today',type:'count',icon:'icon-hospital',goal:0,translation_key:'targets.referral.count',subtitle_translation_key:'targets.today.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return o(t)&&t.reports.some(t=>n(new Date(t.reported_date))&&a(t))},date:'reported'},{id:'travellers-with-referral-this-month',type:'count',icon:'icon-hospital',goal:0,translation_key:'targets.referral.count',subtitle_translation_key:'targets.this_month.subtitle',context:'user.role === \"inputter\"',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return o(t)&&t.reports.some(t=>a(t))},date:'reported'}]},function(t,e,r){var o=r(0);function n(t,e,r,o,n,a){var i;if(t.appliesToType){var s='contact'===n.contact.type?n.contact.contact_type:n.contact.type;if(!('contacts'===t.appliesTo?-1!==t.appliesToType.indexOf(s):a&&-1!==t.appliesToType.indexOf(a.form)))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(n,a))if('scheduled_tasks'===t.appliesTo){if(a&&t.appliesIf){if(!a.scheduled_tasks)return;for(i=0;i<a.scheduled_tasks.length;i++)t.appliesIf(n,a,i)&&p(i)}}else p();function c(t,e,r){var o;return(o='function'==typeof t.contactLabel?t.contactLabel(e,r):t.contactLabel)?{name:o}:e.contact}function p(i){var s,p,d,u,f=null;for(s=0;s<t.events.length;s++){if((p=t.events[s]).dueDate)f=p.dueDate(p,n,a,i);else if(a)f=void 0!==i?new Date(e.addDate(new Date(a.scheduled_tasks[i].due),p.days)):new Date(e.addDate(new Date(a.reported_date),p.days));else if(p.dueDate)f=p.dueDate(p,n);else{var y=n.contact&&n.contact.reported_date?new Date(n.contact.reported_date):new Date;f=new Date(e.addDate(y,p.days))}e.isTimely(f,p)&&(u={_id:(a?a._id:n.contact&&n.contact._id)+'~'+(p.id||s)+'~'+t.name,deleted:!(!(n.contact&&n.contact.deleted||a)||!a.deleted),doc:n,contact:c(t,n,a),icon:t.icon,date:f,readyStart:p.start||0,readyEnd:p.end||0,title:t.title,resolved:t.resolvedIf(n,a,p,f,i),actions:t.actions.map(l)},void 0!==i&&(u._id+='-'+i),'function'==typeof(d=t.priority)&&(d=d(n,a)),d&&(u.priority=d.level,u.priorityLabel=d.label),o('task',new r(u)))}}function l(t){var e={source:'task',source_id:!!a?a._id:n.contact&&n.contact._id,contact:n.contact};return t.modifyContent&&t.modifyContent(e,n,a),{type:'report',form:t.form,label:t.label||'Follow up',content:e}}}t.exports=function(t,e,r,a,i){if(t)for(var s,c=0;c<t.length;++c)switch(s=t[c],o(s),s.appliesTo){case'reports':case'scheduled_tasks':for(var p=0;p<e.reports.length;++p)n(s,r,a,i,e,e.reports[p]);break;case'contacts':e.contact&&n(s,r,a,i,e);break;default:throw new Error('Unrecognised task.appliesTo: '+s.appliesTo)}}},function(t,e,r){var o=r(0);function n(t,e,r,o,n,a){var i=!!a;if(n.contact){var s=n.contact.contact_type||n.contact.type,c=i?a.form:s;if(!(t.appliesToType&&t.appliesToType.indexOf(c)<0)&&(!t.appliesIf||t.appliesIf(n,a)))for(var p=i?a:n.contact,l=function(t,e,r){var o;return o='function'==typeof t.idType?t.idType(e,r):'report'===t.idType?r&&r._id:e.contact&&e.contact._id,Array.isArray(o)||(o=[o]),o}(t,n,a),d=!t.passesIf||!!t.passesIf(n,a),u=function(t,e,r,o){if('function'==typeof t.date)return t.date(r,o);if(void 0===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return o?o.reported_date:r.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,r,n,a),f=t.groupBy&&t.groupBy(n,a),y=0;y<l.length;++y){var _=new e({_id:l[y]+'~'+t.id,contact:n.contact,deleted:!!p.deleted,type:t.id,pass:d,groupBy:f,date:u});t.emitCustom?t.emitCustom(g,_,n,a):g(_)}}function g(t){o('target',t)}}t.exports=function(t,e,r,a,i){for(var s=0;s<t.length;++s){var c=t[s];switch(o(c),c.appliesTo){case'contacts':n(c,a,r,i,e);break;case'reports':for(var p=0;p<e.reports.length;++p){n(c,a,r,i,e,e.reports[p])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": [
        {
          "id": "travellers-registered-this-month",
          "type": "count",
          "translation_key": "targets.travellers.count",
          "icon": "icon-person",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-registered-today",
          "type": "count",
          "translation_key": "targets.travellers.count",
          "icon": "icon-person",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "reports-with-risk-this-month",
          "type": "count",
          "translation_key": "targets.risk.count",
          "icon": "icon-risk",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-declaration-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.declaration.percent",
          "icon": "icon-form-general",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-quarantine-today",
          "type": "count",
          "translation_key": "targets.quarantine.count",
          "icon": "icon-calendar",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "travellers-with-quarantine-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.quarantine.percent",
          "icon": "icon-calendar",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-locator-this-month",
          "type": "percent",
          "goal": 100,
          "translation_key": "targets.locator.percent",
          "icon": "icon-service-rating",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        },
        {
          "id": "travellers-with-referral-today",
          "type": "count",
          "translation_key": "targets.referral.count",
          "icon": "icon-hospital",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.today.subtitle"
        },
        {
          "id": "travellers-with-referral-this-month",
          "type": "count",
          "translation_key": "targets.referral.count",
          "icon": "icon-hospital",
          "context": "user.role === \"inputter\"",
          "subtitle_translation_key": "targets.this_month.subtitle"
        }
      ]
    }
  },
  "transitions": {
    "mark_for_outbound": true,
    "accept_patient_reports": false,
    "conditional_alerts": false,
    "default_responses": false,
    "update_sent_by": false,
    "registration": true,
    "update_clinics": true,
    "update_notifications": false,
    "update_scheduled_reports": false,
    "update_sent_forms": false,
    "generate_patient_id_on_people": true,
    "death_reporting": true
  },
  "outbound": {
    "textit-message": {
      "relevant_to": "doc.type === 'data_record' && doc.tasks && doc.tasks[0] && doc.tasks[0].state && doc.tasks[0].state === 'pending'",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'0e819482-a9bf-45a9-9d44-21ce4a11b6c0'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.tasks[0].messages[0].to ]",
          "optional": false
        },
        "extra.message": {
          "expr": "doc.tasks[0].messages[0].message",
          "optional": false
        },
        "extra.uuid": {
          "expr": "doc.tasks[0].messages[0].uuid",
          "optional": false
        }
      }
    },
    "textit-patient": {
      "relevant_to": "doc.type === 'person' && doc.phone && doc.parent.parent.parent",
      "destination": {
        "base_url": "https://textit.in",
        "auth": {
          "type": "header",
          "name": "Authorization",
          "value_key": "textit.in"
        },
        "path": "/api/v2/flow_starts.json"
      },
      "mapping": {
        "flow": {
          "expr": "'5e52fe1a-1236-49bb-8de5-df5724e85e20'"
        },
        "urns": {
          "expr": "[ 'tel:' + doc.phone ]",
          "optional": false
        },
        "extra.patient._id": "doc._id",
        "extra.patient._rev": "doc._rev",
        "extra.patient.name": "doc.name",
        "extra.patient.short_name": "doc.short_name",
        "extra.patient.date_of_birth": "doc.date_of_birth",
        "extra.patient.medic_id": "doc.patient_id",
        "extra.patient.phone": "doc.phone",
        "extra.chw._id": "doc.parent.parent.contact._id",
        "extra.chw.name": "doc.parent.parent.contact.name"
      }
    }
  },
  "forms": {
    "1": {
      "meta": {
        "code": "1",
        "label": {
          "en": "1"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true,
      "facility_reference": "rc_code"
    },
    "2": {
      "meta": {
        "code": "2",
        "label": {
          "en": "2"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "3": {
      "meta": {
        "code": "3",
        "label": {
          "en": "3"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "4": {
      "meta": {
        "code": "4",
        "label": {
          "en": "4"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "5": {
      "meta": {
        "code": "5",
        "label": {
          "en": "5"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "6": {
      "meta": {
        "code": "6",
        "label": {
          "en": "6"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "7": {
      "meta": {
        "code": "7",
        "label": {
          "en": "7"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "8": {
      "meta": {
        "code": "8",
        "label": {
          "en": "8"
        }
      },
      "fields": {},
      "public_form": false,
      "use_sentinel": true
    },
    "PHONE_VERIFICATION": {
      "meta": {
        "code": "PHONE_VERIFICATION",
        "icon": "icon-on",
        "translation_key": "form.phone_verification.title"
      },
      "fields": {
        "patient_id": {
          "labels": {
            "short": {
              "translation_key": "patient_id"
            },
            "tiny": {
              "en": "ID"
            }
          },
          "position": 0,
          "flags": {
            "input_digits_only": true
          },
          "length": [
            5,
            13
          ],
          "type": "string",
          "required": true
        }
      },
      "use_sentinel": true
    },
    "COVID_SYMPTOMS": {
      "meta": {
        "code": "COVID_SYMPTOMS",
        "icon": "icon-risk",
        "translation_key": "form.covid_symptoms.title"
      },
      "fields": {
        "patient_id": {
          "labels": {
            "short": {
              "translation_key": "patient_id"
            },
            "tiny": {
              "en": "ID"
            }
          },
          "position": 0,
          "flags": {
            "input_digits_only": true
          },
          "length": [
            5,
            13
          ],
          "type": "string",
          "required": true
        },
        "notes": {
          "labels": {
            "short": {
              "translation_key": "notes"
            },
            "tiny": {
              "en": "n"
            }
          },
          "position": 1,
          "length": [
            0,
            200
          ],
          "type": "string",
          "required": false
        }
      },
      "use_sentinel": true
    },
    "CHA_SIGNAL_VERIFICATION": {
      "meta": {
        "label": {
          "en": "CHA Signal Verification"
        },
        "code": "CHA_SIGNAL_VERIFICATION"
      },
      "fields": {
        "patient_id": {
          "position": 1,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "patient_id"
            },
            "short": {
              "en": "Signal ID"
            },
            "description": {
              "en": "Signal ID"
            }
          },
          "list": []
        },
        "signal_id": {
          "position": 2,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_id"
            },
            "short": {
              "en": "Signal ID"
            },
            "description": {
              "en": "Signal ID"
            }
          },
          "list": []
        },
        "signal_desc": {
          "position": 3,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_desc"
            },
            "short": {
              "en": "Provide brief description of signal (What happened/Is happening?)"
            },
            "description": {
              "en": "Provide brief description of signal (What happened/Is happening?)"
            }
          },
          "list": []
        },
        "among_cebs_signals": {
          "position": 4,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "among_cebs_signals"
            },
            "short": {
              "en": "Does the information match one of the signals on the list"
            },
            "description": {
              "en": "Does the information match one of the signals on the list"
            }
          },
          "list": []
        },
        "signal_type": {
          "position": 5,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_type"
            },
            "short": {
              "en": "What was the final classification of the public health signal?"
            },
            "description": {
              "en": "What was the final classification of the public health signal?"
            }
          },
          "list": []
        },
        "signal_duplicate": {
          "position": 6,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_duplicate"
            },
            "short": {
              "en": "Has this signal  been reported before?"
            },
            "description": {
              "en": "Has this signal  been reported before?"
            }
          },
          "list": []
        },
        "signal_start_date": {
          "position": 7,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_start_date"
            },
            "short": {
              "en": "When did the health threat start? (date and time)"
            },
            "description": {
              "en": "When did the health threat start? (date and time)"
            }
          },
          "list": []
        },
        "no_people": {
          "position": 8,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_people"
            },
            "short": {
              "en": "Indicate an approximate number of people ill reported"
            },
            "description": {
              "en": "Indicate an approximate number of people ill reported"
            }
          },
          "list": []
        },
        "no_people_dead": {
          "position": 9,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_people_dead"
            },
            "short": {
              "en": "Indicate an approximate number of people reported dead"
            },
            "description": {
              "en": "Indicate an approximate number of people reported dead"
            }
          },
          "list": []
        },
        "involves_animals": {
          "position": 10,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "involves_animals"
            },
            "short": {
              "en": "Does this signal involve animals or animal exposures?"
            },
            "description": {
              "en": "Does this signal involve animals or animal exposures?"
            }
          },
          "list": []
        },
        "animals_involved": {
          "position": 11,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "animals_involved"
            },
            "short": {
              "en": "What animals are involved?"
            },
            "description": {
              "en": "What animals are involved?"
            }
          },
          "list": []
        },
        "animals_involved_other": {
          "position": 12,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "animals_involved_other"
            },
            "short": {
              "en": "Specify"
            },
            "description": {
              "en": "Specify"
            }
          },
          "list": []
        },
        "no_animals": {
          "position": 13,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_animals"
            },
            "short": {
              "en": "Indicate an approximate number of animals affected"
            },
            "description": {
              "en": "Indicate an approximate number of animals affected"
            }
          },
          "list": []
        },
        "no_animals_dead": {
          "position": 14,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_animals_dead"
            },
            "short": {
              "en": "Indicate an approximate number of animals reported dead"
            },
            "description": {
              "en": "Indicate an approximate number of animals reported dead"
            }
          },
          "list": []
        },
        "source": {
          "position": 15,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "source"
            },
            "short": {
              "en": "From whom did the CHV get this information?"
            },
            "description": {
              "en": "From whom did the CHV get this information?"
            }
          },
          "list": []
        },
        "additional_details": {
          "position": 16,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "additional_details"
            },
            "short": {
              "en": "Please, provide any additional information about the signal"
            },
            "description": {
              "en": "Please, provide any additional information about the signal"
            }
          },
          "list": []
        },
        "verification_date": {
          "position": 17,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "verification_date"
            },
            "short": {
              "en": "When was the public health threat verified? (date and time)"
            },
            "description": {
              "en": "When was the public health threat verified? (date and time)"
            }
          },
          "list": []
        },
        "threat_exists": {
          "position": 18,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "threat_exists"
            },
            "short": {
              "en": "Does the reported threat exist?"
            },
            "description": {
              "en": "Does the reported threat exist?"
            }
          },
          "list": []
        },
        "scdsc_informed_date": {
          "position": 19,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "scdsc_informed_date"
            },
            "short": {
              "en": "Date when SCDSC was informed about the public health event"
            },
            "description": {
              "en": "Date when SCDSC was informed about the public health event"
            }
          },
          "list": []
        },
        "referred_to_animal_health": {
          "position": 20,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "referred_to_animal_health"
            },
            "short": {
              "en": "Has the signal been referred to the animal health team?"
            },
            "description": {
              "en": "Has the signal been referred to the animal health team?"
            }
          },
          "list": []
        }
      },
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "CHA_SIGNAL_REPORTING": {
      "meta": {
        "label": {
          "en": "CHA Signal Reporting"
        },
        "code": "CHA_SIGNAL_REPORTING"
      },
      "fields": {
        "signal_type": {
          "position": 1,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_type"
            },
            "short": {
              "en": "What type of signal are you reporting?"
            },
            "description": {
              "en": "What type of signal are you reporting?"
            }
          },
          "list": []
        },
        "signal_type_desc": {
          "position": 2,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_type_desc"
            },
            "short": {
              "en": "Signal description"
            },
            "description": {
              "en": "Signal description"
            }
          },
          "list": []
        }
      }
    },
    "SCDSC_INVESTIGATION": {
      "meta": {
        "label": {
          "en": "SCDSC Investigation"
        },
        "code": "SCDSC_INVESTIGATION"
      },
      "fields": {
        "patient_id": {
          "position": 1,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "patient_id"
            },
            "short": {
              "en": "Signal ID"
            },
            "description": {
              "en": "Signal ID"
            }
          },
          "list": []
        },
        "signal_id": {
          "position": 2,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signal_id"
            },
            "short": {
              "en": "Signal ID"
            },
            "description": {
              "en": "Signal ID"
            }
          },
          "list": []
        },
        "scdc_informed_date": {
          "position": 3,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "scdc_informed_date"
            },
            "short": {
              "en": "When was the SCDSC informed?"
            },
            "description": {
              "en": "When was the SCDSC informed?"
            }
          },
          "list": []
        },
        "investigation_start_date": {
          "position": 4,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "investigation_start_date"
            },
            "short": {
              "en": "When did the investigation by Sub county begin/start?"
            },
            "description": {
              "en": "When did the investigation by Sub county begin/start?"
            }
          },
          "list": []
        },
        "event_start_date": {
          "position": 5,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "event_start_date"
            },
            "short": {
              "en": "When did the event start? "
            },
            "description": {
              "en": "When did the event start? "
            }
          },
          "list": []
        },
        "signs_symptoms": {
          "position": 6,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "signs_symptoms"
            },
            "short": {
              "en": "What are the signs and symptoms that are being reported?"
            },
            "description": {
              "en": "What are the signs and symptoms that are being reported?"
            }
          },
          "list": []
        },
        "cause_known": {
          "position": 7,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "cause_known"
            },
            "short": {
              "en": "Is the cause of the event known?"
            },
            "description": {
              "en": "Is the cause of the event known?"
            }
          },
          "list": []
        },
        "cause": {
          "position": 8,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "cause"
            },
            "short": {
              "en": "What is the cause?"
            },
            "description": {
              "en": "What is the cause?"
            }
          },
          "list": []
        },
        "lab_results_known": {
          "position": 9,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "lab_results_known"
            },
            "short": {
              "en": "Are laboratory results known?"
            },
            "description": {
              "en": "Are laboratory results known?"
            }
          },
          "list": []
        },
        "collected_lab_samples": {
          "position": 10,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "collected_lab_samples"
            },
            "short": {
              "en": "Have laboratory samples been collected?"
            },
            "description": {
              "en": "Have laboratory samples been collected?"
            }
          },
          "list": []
        },
        "no_people_exposed": {
          "position": 11,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_people_exposed"
            },
            "short": {
              "en": "Number of people exposed "
            },
            "description": {
              "en": "Number of people exposed "
            }
          },
          "list": []
        },
        "no_human_cases": {
          "position": 12,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_human_cases"
            },
            "short": {
              "en": "Number of human cases "
            },
            "description": {
              "en": "Number of human cases "
            }
          },
          "list": []
        },
        "no_human_cases_hospitalized": {
          "position": 13,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_human_cases_hospitalized"
            },
            "short": {
              "en": "Number of human cases hospitalized"
            },
            "description": {
              "en": "Number of human cases hospitalized"
            }
          },
          "list": []
        },
        "no_human_deaths": {
          "position": 14,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_human_deaths"
            },
            "short": {
              "en": "Number of human deaths"
            },
            "description": {
              "en": "Number of human deaths"
            }
          },
          "list": []
        },
        "no_animals_exposed": {
          "position": 15,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_animals_exposed"
            },
            "short": {
              "en": "Number of animals exposed"
            },
            "description": {
              "en": "Number of animals exposed"
            }
          },
          "list": []
        },
        "no_sick_animals": {
          "position": 16,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_sick_animals"
            },
            "short": {
              "en": "Number of sick animals"
            },
            "description": {
              "en": "Number of sick animals"
            }
          },
          "list": []
        },
        "no_dead_animals": {
          "position": 17,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "no_dead_animals"
            },
            "short": {
              "en": "Number of dead animals"
            },
            "description": {
              "en": "Number of dead animals"
            }
          },
          "list": []
        },
        "new_cases_initial_area": {
          "position": 18,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "new_cases_initial_area"
            },
            "short": {
              "en": "Are new cases still being reported from the initial area?"
            },
            "description": {
              "en": "Are new cases still being reported from the initial area?"
            }
          },
          "list": []
        },
        "new_cases_new_areas": {
          "position": 19,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "new_cases_new_areas"
            },
            "short": {
              "en": "Are new cases being reported from new areas?"
            },
            "description": {
              "en": "Are new cases being reported from new areas?"
            }
          },
          "list": []
        },
        "setting_promotes_spread": {
          "position": 20,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "setting_promotes_spread"
            },
            "short": {
              "en": "Does the event setting promote spread?"
            },
            "description": {
              "en": "Does the event setting promote spread?"
            }
          },
          "list": []
        },
        "additional_info": {
          "position": 21,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "additional_info"
            },
            "short": {
              "en": "Please provide any additional information on the event"
            },
            "description": {
              "en": "Please provide any additional information on the event"
            }
          },
          "list": []
        },
        "event_measures": {
          "position": 22,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "event_measures"
            },
            "short": {
              "en": "Event measures"
            },
            "description": {
              "en": "Event measures"
            }
          },
          "list": []
        },
        "human_attack_rate": {
          "position": 23,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "human_attack_rate"
            },
            "short": {
              "en": "Attack rate (human)"
            },
            "description": {
              "en": "Attack rate (human)"
            }
          },
          "list": []
        },
        "human_hospitalization_rate": {
          "position": 24,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "human_hospitalization_rate"
            },
            "short": {
              "en": "Hospitalization rate (human)"
            },
            "description": {
              "en": "Hospitalization rate (human)"
            }
          },
          "list": []
        },
        "human_case_fatality_rate": {
          "position": 25,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "human_case_fatality_rate"
            },
            "short": {
              "en": "Case fatality rate (CFR) (human)"
            },
            "description": {
              "en": "Case fatality rate (CFR) (human)"
            }
          },
          "list": []
        },
        "animal_attack_rate": {
          "position": 26,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "animal_attack_rate"
            },
            "short": {
              "en": "Attack rates (animals)"
            },
            "description": {
              "en": "Attack rates (animals)"
            }
          },
          "list": []
        },
        "animal_case_fatality_rate": {
          "position": 27,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "animal_case_fatality_rate"
            },
            "short": {
              "en": "Case fatality rate (CFR) (animal)"
            },
            "description": {
              "en": "Case fatality rate (CFR) (animal)"
            }
          },
          "list": []
        },
        "event_risk_classificaiton": {
          "position": 28,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "event_risk_classificaiton"
            },
            "short": {
              "en": "How would you classify the risk of the event? (consider diagnosis, setting and measures)"
            },
            "description": {
              "en": "How would you classify the risk of the event? (consider diagnosis, setting and measures)"
            }
          },
          "list": []
        },
        "response_recommedations": {
          "position": 29,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "response_recommedations"
            },
            "short": {
              "en": "What are the recommended response activities ?"
            },
            "description": {
              "en": "What are the recommended response activities ?"
            }
          },
          "list": []
        },
        "response_start_date": {
          "position": 30,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "response_start_date"
            },
            "short": {
              "en": "When did the response start?"
            },
            "description": {
              "en": "When did the response start?"
            }
          },
          "list": []
        }
      },
      "facility_reference": "rc_code",
      "use_sentinel": true
    }
  },
  "registrations": [
    {
      "form": "1",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "2",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "3",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "4",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "5",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "6",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "7",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "8",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_signal_reminders_to_CHA",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.covid.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.covid.signal.notification",
          "event_type": "report_accepted",
          "recipient": "parent"
        }
      ]
    },
    {
      "form": "CHA_SIGNAL_REPORTING",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type != '8'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": "doc.fields.signal_type && doc.fields.signal_type == '8'"
        }
      ],
      "validations": {},
      "messages": [
        {
          "translation_key": "messages.cha.signal.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "CHA_SIGNAL_VERIFICATION",
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "signal_reminders_to_CHA",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "self_reported_signal_reminders_to_CHA",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "covid_signal_reminders_to_CHA",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "covid_self_reported_signal_reminders_to_CHA",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_verification_notification_to_scdsc",
          "bool_expr": "(doc.fields.among_cebs_signals && doc.fields.among_cebs_signals === 'Yes') && (doc.fields.signal_duplicate && doc.fields.signal_duplicate === 'No') && (doc.fields.threat_exists && doc.fields.threat_exists === 'Yes') && (!doc.fields.referred_to_animal_health || (doc.fields.referred_to_animal_health && doc.fields.referred_to_animal_health === 'No'))"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_verification_animal_notification_to_scdsc",
          "bool_expr": "(doc.fields.among_cebs_signals && doc.fields.among_cebs_signals === 'Yes') && (doc.fields.signal_duplicate && doc.fields.signal_duplicate === 'No') && (doc.fields.threat_exists && doc.fields.threat_exists === 'Yes') && (doc.fields.referred_to_animal_health && doc.fields.referred_to_animal_health === 'Yes')"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "signal_reminders_to_scdsc",
          "bool_expr": "(doc.fields.among_cebs_signals && doc.fields.among_cebs_signals === 'Yes') && (doc.fields.signal_duplicate && doc.fields.signal_duplicate === 'No') && (doc.fields.threat_exists && doc.fields.threat_exists === 'Yes')"
        }
      ],
      "validations": {
        "join_responses": true,
        "list": [
          {
            "property": "patient_id",
            "rule": "unique('form', 'patient_id')",
            "translation_key": "messages.signal.verification.validation.unique",
            "recipient": "reporting_unit"
          }
        ]
      },
      "messages": [
        {
          "translation_key": "messages.signal.verification.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.generic.registration_not_found",
          "event_type": "registration_not_found",
          "recipient": "reporting_unit"
        }
      ]
    },
    {
      "form": "SCDSC_INVESTIGATION",
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "signal_reminders_to_scdsc",
          "bool_expr": ""
        }
      ],
      "validations": {
        "join_responses": true,
        "list": [
          {
            "property": "patient_id",
            "rule": "unique('form', 'patient_id')",
            "translation_key": "messages.signal.investigation.validation.unique"
          },
          {
            "property": "patient_id",
            "rule": "exists('CHA_SIGNAL_VERIFICATION', 'patient_id')",
            "translation_key": "messages.signal.investigation.validation.verification_exists"
          }
        ]
      },
      "messages": [
        {
          "translation_key": "messages.signal.investigation.report_accepted",
          "event_type": "report_accepted",
          "recipient": "reporting_unit"
        },
        {
          "translation_key": "messages.generic.registration_not_found",
          "event_type": "registration_not_found",
          "recipient": "reporting_unit"
        }
      ]
    }
  ],
  "schedules": [
    {
      "name": "signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.2",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "self_reported_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.self.reported.reminders.2",
          "group": 1,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_reminders_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "grandparent"
        },
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "16 hours",
          "send_time": "",
          "recipient": "grandparent"
        },
        {
          "translation_key": "messages.signal.verification.reminders.1",
          "group": 2,
          "offset": "24 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_verification_notification_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.notification",
          "group": 3,
          "offset": "30 seconds",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "signal_verification_animal_notification_to_scdsc",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.signal.verification.animal.notification",
          "group": 3,
          "offset": "30 seconds",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "covid_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "4 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.covid.schedule.signal.reminders.2",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    },
    {
      "name": "covid_self_reported_signal_reminders_to_CHA",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "4 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "8 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.schedule.signal.reminders.1",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "parent"
        },
        {
          "translation_key": "messages.covid.schedule.signal.self.reported.reminders.2",
          "group": 1,
          "offset": "12 hours",
          "send_time": "",
          "recipient": "grandparent"
        }
      ]
    }
  ],
  "sms": {
    "outgoing_service": "medic-gateway"
  }
}
